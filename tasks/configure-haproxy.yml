---
- name: Configure haproxy frontend ssl environment
  when: haproxy_frontend_ssl_enable
  block:
    - name: Create frontend ssl directory
      ansible.builtin.file:
        path: "{{ haproxy_frontend_ssl_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0644

    - name: Upload frontend ssl certificate files
      ansible.builtin.copy:
        src: "{{ item.src_filename }}"
        dest: "{{ haproxy_frontend_ssl_dir }}/{{ item.dest_filename }}"
        owner: root
        group: root
        mode: 0640
      with_items: "{{ haproxy_frontend_ssl_certificates }}"

- name: Define default value for haproxy_config_global items
  block:
    - name: Set haproxy_config_global.logs when is not defined
      ansible.builtin.set_fact:
        _haproxy_config_global_logs: >-
          {{
            ["log 127.0.0.1 local2"] if ansible_os_family == 'RedHat' else ["log /dev/log local0"]
          }}
      when: _haproxy_config_global_logs is not defined or _haproxy_config_global_logs is none
    - name: Set haproxy_config_global.stats_socket_configs when is not defined
      ansible.builtin.set_fact:
        _haproxy_config_global_stats_socket_configs: >-
          {{
            ["stats socket /var/lib/haproxy/"] if ansible_os_family == 'RedHat'
            else ["stats socket /run/haproxy/admin.sock mode 660 level admin", "stats timeout 30s"]
          }}
      when: _haproxy_config_global_stats_socket_configs is not defined or _haproxy_config_global_stats_socket_configs is none
    - name: Set haproxy_config_global.security_ssl_policies when is not defined
      ansible.builtin.set_fact:
        _haproxy_config_global_security_ssl_policies: >-
          {{
            ["ssl-default-bind-ciphers PROFILE=SYSTEM", "ssl-default-server-ciphers PROFILE=SYSTEM"] if ansible_os_family == 'RedHat'
            else
            [
              "ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384",
              "ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256",
              "ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets"
            ]
          }}
      when: _haproxy_config_global_security_ssl_policies is not defined or _haproxy_config_global_security_ssl_policies is none

- name: Update haproxy configuration file
  ansible.builtin.template:
    src: "{{ haproxy_config_filename }}.j2"
    dest: "{{ haproxy_config_dir }}/{{ haproxy_config_filename }}"
    owner: root
    group: root
    mode: 0644
  register: haproxy_update_result

- name: Get haproxy configuration status
  ansible.builtin.command: "haproxy -c -f {{ haproxy_config_dir }}/{{ haproxy_config_filename }}"
  changed_when: false
  failed_when: false
  register: haproxy_config_status

- name: Check if haproxy configuration is valid
  ansible.builtin.assert:
    that:
      - haproxy_config_status.rc == 0
    fail_msg: "{{ haproxy_config_status.stderr_lines }}"
  changed_when: haproxy_update_result.changed
  notify: Restart haproxy service

- name: Enable and start haproxy service
  ansible.builtin.systemd_service:
    name: haproxy
    state: started
    daemon_reload: true
    enabled: true
